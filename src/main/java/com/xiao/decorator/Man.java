package com.xiao.decorator;

/**
 * 一个功能完善的对象，如果我们想要给这个对象添加一个新的功能，
 * 那么我们可以用一个新的类去装饰它来实现对原有对象功能的扩展。
 * 新的类称为“装饰者”，原有的对象称为“被装饰者”。
 * 装饰模式类似代理模式
 * 装饰模式：侧重给一个实现类动态添加功能，不会对实现类的方法进行过滤拦截
 * 代理模式：侧重将一个实现类的功能，委托给代理类来处理，可以对实现类的方法进行过滤拦截(某种情况下，可能不执行实现类的方法)
 */
public class Man implements Human{
    @Override
    public void run() {
        System.out.println("跑");
    }
}
